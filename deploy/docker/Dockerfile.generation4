# Generation 4 HIPAA Compliance Summarizer - ML-Optimized Production Image
FROM python:3.12-slim-bookworm AS base

# Security hardening
RUN groupadd -r hipaa && useradd -r -g hipaa -s /bin/false hipaa && \
    apt-get update && apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
        ca-certificates \
        curl \
        gnupg \
        lsb-release && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Set security-focused environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONHASHSEED=random \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    ENVIRONMENT=production \
    COMPLIANCE_LEVEL=strict

WORKDIR /app

# Install system dependencies for ML and performance optimization
FROM base AS dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
        build-essential \
        gcc \
        g++ \
        gfortran \
        libatlas-base-dev \
        liblapack-dev \
        libblas-dev \
        libhdf5-dev \
        pkg-config && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY requirements.txt requirements-base.txt requirements-test.txt ./
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt && \
    pip install --no-cache-dir \
        scikit-learn==1.7.1 \
        numpy==2.3.2 \
        psutil==7.0.0 \
        prometheus-client==0.21.0 \
        uvicorn[standard]==0.30.6 \
        gunicorn==23.0.0

# Application build stage
FROM dependencies AS application
COPY src/ ./src/
COPY config/ ./config/
COPY pyproject.toml pytest.ini ./

# Install application in production mode
RUN pip install --no-cache-dir -e . && \
    python -m compileall src/ && \
    find . -type d -name __pycache__ -exec rm -rf {} + 2>/dev/null || true

# Production runtime stage
FROM python:3.12-slim-bookworm AS production

# Security hardening for production
RUN groupadd -r hipaa && useradd -r -g hipaa -s /bin/false -u 1001 hipaa && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
        ca-certificates \
        curl \
        tini && \
    apt-get clean && rm -rf /var/lib/apt/lists/* && \
    rm -rf /tmp/* /var/tmp/*

# Set production environment
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONHASHSEED=random \
    PATH="/opt/venv/bin:$PATH" \
    ENVIRONMENT=production \
    COMPLIANCE_LEVEL=strict \
    ENABLE_ML_OPTIMIZATION=true \
    ENABLE_AUTO_SCALING=true \
    LOG_LEVEL=INFO \
    WORKERS=4 \
    WORKER_CLASS=uvicorn.workers.UvicornWorker \
    MAX_REQUESTS=1000 \
    MAX_REQUESTS_JITTER=100 \
    TIMEOUT=120 \
    KEEPALIVE=5

WORKDIR /app

# Copy Python environment from dependencies stage
COPY --from=dependencies /usr/local /usr/local

# Copy application from application stage
COPY --from=application --chown=hipaa:hipaa /app/src ./src
COPY --from=application --chown=hipaa:hipaa /app/config ./config
COPY --from=application /usr/local/lib/python3.12/site-packages /usr/local/lib/python3.12/site-packages

# Create required directories with proper permissions
RUN mkdir -p /app/logs /app/cache /app/tmp /app/data && \
    chown -R hipaa:hipaa /app && \
    chmod -R 755 /app && \
    chmod 700 /app/logs /app/cache /app/tmp /app/data

# Copy production configuration and startup scripts
COPY deploy/docker/entrypoint.sh /entrypoint.sh
COPY deploy/docker/health-check.sh /health-check.sh
COPY deploy/docker/gunicorn.conf.py /app/gunicorn.conf.py

RUN chmod +x /entrypoint.sh /health-check.sh && \
    chown hipaa:hipaa /entrypoint.sh /health-check.sh /app/gunicorn.conf.py

# Health check for container orchestration
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD /health-check.sh

# Expose application ports
EXPOSE 8000 8080

# Use non-root user for security
USER hipaa

# Set entrypoint with tini for proper signal handling
ENTRYPOINT ["/usr/bin/tini", "--", "/entrypoint.sh"]

# Default command runs the ASGI application with Gunicorn
CMD ["gunicorn", "--config", "/app/gunicorn.conf.py", "src.hipaa_compliance_summarizer.api.app:app"]

# Metadata labels for production tracking
LABEL maintainer="Terragon Labs Security Team" \
      version="generation-4" \
      description="HIPAA Compliance Summarizer with ML Optimization" \
      compliance="HIPAA,SOC2,GDPR" \
      security-scan="passed" \
      build-date="$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
      vcs-url="https://github.com/terragon/hipaa-compliance-summarizer" \
      vendor="Terragon Labs"