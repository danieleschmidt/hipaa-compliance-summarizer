# Production Dockerfile for HIPAA Compliance Summarizer
FROM python:3.13-slim-bullseye as base

# Security hardening
RUN groupadd -r hipaa && useradd -r -g hipaa -s /bin/false hipaa

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    gcc \
    g++ \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Set working directory
WORKDIR /app

# Create required directories
RUN mkdir -p /app/logs /app/uploads /app/config \
    && chown -R hipaa:hipaa /app

# Copy requirements first (for better caching)
COPY requirements.txt requirements-base.txt ./
RUN pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir -r requirements.txt \
    && pip install --no-cache-dir -r requirements-base.txt

# Production stage
FROM base as production

# Copy application code
COPY --chown=hipaa:hipaa src/ /app/src/
COPY --chown=hipaa:hipaa config/ /app/config/
COPY --chown=hipaa:hipaa pyproject.toml /app/
COPY --chown=hipaa:hipaa README.md /app/

# Install application
RUN pip install --no-cache-dir -e .

# Security configurations
RUN chmod -R 755 /app/src \
    && chmod -R 750 /app/config \
    && chmod -R 755 /app/logs \
    && chmod -R 755 /app/uploads

# Switch to non-root user
USER hipaa

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Environment variables
ENV PYTHONPATH=/app/src
ENV ENVIRONMENT=production
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1

# Expose port
EXPOSE 8000

# Start command
CMD ["python", "-m", "hipaa_compliance_summarizer.api_optimized"]